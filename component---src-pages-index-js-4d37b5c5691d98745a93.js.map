{"version":3,"sources":["webpack:///./src/components/education/study.js","webpack:///./src/components/education/list.js","webpack:///./src/components/education.js","webpack:///./src/components/tool.js","webpack:///./src/components/portfolio/project.js","webpack:///./src/components/portfolio/list.js","webpack:///./src/components/interests/interest.js","webpack:///./src/components/interests/list.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/navbar.js","webpack:///./src/components/layout.js"],"names":["study","className","frontmatter","title","degree","school","dangerouslySetInnerHTML","__html","html","date","studies","allMarkdownRemark","edges","Fragment","length","map","post","node","key","id","Education","education","markdownRemark","props","icon","react","reactIcon","angular","angularIcon","bootstrap","bootstrapIcon","django","djangoIcon","gulp","gulpIcon","wordpress","wordpressIcon","gatsby","gatsbyIcon","webpack","webpackIcon","jquery","jQueryIcon","aws","awsIcon","sass","sassIcon","tool","OverlayTrigger","placement","overlay","Tooltip","Website","image","link","archived","Card","border","href","rel","target","fluid","childImageSharp","Body","Title","as","project","toolset","websites","Row","Col","sm","Text","Object","keys","index","size","width","website","xl","name","useState","showArchive","setShowArchive","portfolio","itemsToShow","filter","item","archive","slice","Button","variant","onClick","interest","interests","lg","Section","children","IndexPage","about","fullName","surname","join","skills","skill","i","xs","md","subskill","j","Badge","subsubskill","k","Nav","Link","linkedin","github","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","json","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","loader","enqueue","createContext","Header","siteTitle","expanded","setExpanded","avatar","Navbar","onToggle","bg","expand","fixed","Brand","file","alt","Toggle","aria-controls","Collapse","section","e","undefined","window","preventDefault","document","getElementById","scrollIntoView","behavior","block","_handleLinkClick","to","Layout","data","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-4d37b5c5691d98745a93.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nexport default ({ study }) => {\n  return (\n    <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n      <div className=\"resume-content\">\n        <h3 className=\"mb-0\">\n          {study.frontmatter.title} <small className=\"text-muted\">{study.frontmatter.degree}</small>\n        </h3>\n        <div className=\"subheading mb-3\">\n          {study.frontmatter.school}\n        </div>\n        <div\n          dangerouslySetInnerHTML={{ __html: study.html }}\n        />\n      </div>\n      <div className=\"resume-date text-md-right\">\n        <span className=\"text-primary\">{study.frontmatter.date}</span>\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  fragment StudyFragment on MarkdownRemark {\n    excerpt(pruneLength: 400)\n    html\n    id\n    frontmatter {\n      title\n      degree\n      school\n      started(formatString: \"MMMM YYYY\")\n      ended(formatString: \"MMMM YYYY\")\n    }\n  }\n`","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Study from './study';\n\nexport default () => {\n    const data = useStaticQuery(graphql`\n        query StudiesQuery {\n            allMarkdownRemark(\n                sort: { order: ASC, fields: [frontmatter___ended] }\n                filter: { frontmatter: { templateKey: { eq: \"study\" } } }\n            ) {\n                edges {\n                    node {\n                        ...StudyFragment\n                    }\n                }\n            }\n        }\n  `)\n    const studies = data.allMarkdownRemark.edges\n    return (\n        <React.Fragment>\n            {studies && studies.length &&\n                studies.map(({ node: post }) => (\n                    <Study study={post} key={post.id}></Study>\n                ))\n            }\n        </React.Fragment>\n    )\n}","import React from \"react\"\nimport Studies from \"./education/list\"\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Education = () => {\n  const { markdownRemark: education } = useStaticQuery(graphql`\n      query EducationQuery {\n        markdownRemark(frontmatter: {templateKey: {eq: \"education\"}}) {\n          html\n        }\n      }\n    `)\n\n  return (\n      <>\n        <div className=\"lead mb-5\" dangerouslySetInnerHTML={{ __html: education.html }} />\n        <Studies />\n      </>\n  )\n}\n\nexport default Education\n","import React from 'react'\nimport { Icon } from '@iconify/react';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport angularIcon from '@iconify/icons-simple-icons/angular';\nimport sassIcon from '@iconify/icons-simple-icons/sass';\nimport bootstrapIcon from '@iconify/icons-simple-icons/bootstrap';\nimport djangoIcon from '@iconify/icons-simple-icons/django';\nimport wordpressIcon from '@iconify/icons-simple-icons/wordpress';\nimport gulpIcon from '@iconify/icons-simple-icons/gulp';\nimport webpackIcon from '@iconify/icons-simple-icons/webpack';\nimport gatsbyIcon from '@iconify/icons-simple-icons/gatsby';\nimport jQueryIcon from '@iconify/icons-simple-icons/jquery';\nimport awsIcon from '@iconify/icons-simple-icons/amazonaws';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nexport default (props) => {\n    const icons = {\n        react: reactIcon,\n        angular: angularIcon,\n        bootstrap: bootstrapIcon,\n        django: djangoIcon,\n        gulp: gulpIcon,\n        wordpress: wordpressIcon,\n        gatsby: gatsbyIcon,\n        webpack: webpackIcon,\n        jquery: jQueryIcon,\n        aws: awsIcon,\n        sass: sassIcon\n    }\n    const icon = icons[props.tool]\n    return (\n        <OverlayTrigger\n            key=\"top\"\n            placement=\"bottom\"\n            overlay={\n                <Tooltip id='tooltip-top'>\n                    {props.tool}\n                </Tooltip>\n            }\n        >\n            <Icon icon={icon} {...props} className=\"tool-icon\" />\n        </OverlayTrigger>\n    )\n}","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Card } from 'react-bootstrap'\nimport Img from \"gatsby-image\"\nimport Tool from \"../tool\"\nimport { Col, Row } from 'react-bootstrap';\n\nconst Website = ({ title, image = null, link, archived }) => {\n  return (\n    <Card border=\"secondary\" className=\"shadow h-100\">\n      {image &&\n        <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n          <Img className=\"card-img-top\" fluid={image.childImageSharp.fluid} />\n        </a>\n      }\n      <Card.Body className=\"d-flex flex-column\">\n        <Card.Title as=\"h5\">{title}</Card.Title>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ({ project }) => {\n  const { title, image, link, toolset, websites } = project.frontmatter\n  return (\n    <Card as=\"section\" className=\"my-5\">\n      <Row className=\"no-gutters\">\n        {project.frontmatter.image &&\n          <Col sm={6}>\n            <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">\n              <Img fluid={image.childImageSharp.fluid} className=\"card-img\" />\n            </a>\n          </Col>\n        }\n        <Col>\n          <Card.Body>\n            <header>\n              <Card.Title><h3>{title}</h3></Card.Title>\n            </header>\n            <Card.Text>\n              <div dangerouslySetInnerHTML={{ __html: project.html }} />\n            </Card.Text>\n            <ul className=\"list-inline my-4\">\n              {toolset && Object.keys(toolset).map((key, index) => (\n                toolset[key] &&\n                <li className=\"list-inline-item\" key={index}>\n                  <Tool tool={key} size=\"32\" width=\"2em\" />\n                </li>\n              ))}\n            </ul>\n            {websites && websites.length > 0 &&\n              <>\n                <h4>Projects</h4>\n                <Row>\n                  {websites.map((website, index) =>\n                    <Col sm={4} xl={3} className=\"mb-5\" key={index}>\n                      <Website title={website.name} link={website.link} image={website.image} archived={website.archived} />\n                    </Col>\n                  )}\n                </Row>\n              </>\n            }\n          </Card.Body>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport const query = graphql`\n  fragment ProjectFragment on MarkdownRemark {\n    excerpt(pruneLength: 400)\n    html\n    id\n    frontmatter {\n      title\n      archive\n      websites {\n        name\n        link\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1024, maxHeight: 576, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      link\n      image {\n        childImageSharp {\n          fluid(maxWidth: 1024, maxHeight: 576, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      toolset {\n        react\n        angular\n        bootstrap\n        django\n        gulp\n        wordpress\n        gatsby\n        webpack\n        jquery\n        aws\n        sass\n      }\n      started(formatString: \"MMMM YYYY\")\n      ended(formatString: \"MMMM YYYY\")\n    }\n  }\n`","import React, { useState } from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Project from './project';\nimport { Button } from 'react-bootstrap';\n\nexport default () => {\n    const [showArchive, setShowArchive] = useState(false)\n\n    const data = useStaticQuery(graphql`\n    query PortfolioQuery {\n        allMarkdownRemark(\n            sort: { order: [DESC, ASC], fields: [frontmatter___archive, frontmatter___ended] }\n            filter: { frontmatter: { templateKey: { eq: \"project\" } } }\n        ) {\n            edges {\n                node {\n                    ...ProjectFragment\n                }\n            }\n        }\n    }\n  `)\n    const portfolio = data.allMarkdownRemark.edges\n    const itemsToShow = showArchive ? -1 : portfolio.filter(item => !item.node.frontmatter.archive).length\n\n    return (\n        <>\n            {portfolio && portfolio.length &&\n                portfolio.slice(0, itemsToShow).map(({ node: post }) => (\n                    <Project project={post} key={post.id} />\n                ))\n            }\n            <Button variant=\"info\" className=\"d-print-none\" onClick={() => setShowArchive(!showArchive)}>Show {showArchive ? 'less' : 'more'}</Button>\n        </>\n    )\n}","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Card } from 'react-bootstrap'\nimport Img from \"gatsby-image\"\n\nexport default ({ project: interest }) => {\n  return (\n    <Card border=\"secondary\" className=\"shadow h-100\">\n      {interest.frontmatter.image &&\n        <Img className=\"card-img-top\" fluid={interest.frontmatter.image.childImageSharp.fluid} />\n      }\n      <Card.Body className=\"d-flex flex-column\">\n        <Card.Title as=\"h3\">{interest.frontmatter.title}</Card.Title>\n        <Card.Text dangerouslySetInnerHTML={{ __html: interest.html }} className=\"flex-grow-1\" />\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport const query = graphql`\n  fragment InterestFragment on MarkdownRemark {\n    excerpt(pruneLength: 400)\n    html\n    id\n    frontmatter {\n      title\n      image {\n        childImageSharp {\n          fluid(maxWidth: 1024, maxHeight: 576, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Interest from './interest';\nimport { Col, Row } from 'react-bootstrap';\n\nexport default () => {\n    const data = useStaticQuery(graphql`\n    query InterestsQuery {\n        allMarkdownRemark(\n            sort: { order: [DESC, ASC], fields: [] }\n            filter: { frontmatter: { templateKey: { eq: \"interest\" } } }\n        ) {\n            edges {\n                node {\n                    ...InterestFragment\n                }\n            }\n        }\n    }\n  `)\n    const interests = data.allMarkdownRemark.edges\n    return (\n        <Row>\n            {interests && interests.length &&\n                interests.map(({ node: post }) => (\n                    <Col sm={3} lg={4} className=\"mb-5\" key={post.id}>\n                        <Interest project={post} />\n                    </Col>\n                ))\n            }\n        </Row>\n    )\n}","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Education from \"../components/education\"\nimport Portfolio from \"../components/portfolio/list\"\nimport Interests from \"../components/interests/list\"\nimport { FaLinkedin, FaGithub } from 'react-icons/fa';\nimport { Nav, Badge, Row, Col } from \"react-bootstrap\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Section = (props) => (\n  <section id={props.id} className=\"resume-section p-3 p-lg-5 d-flex flex-column justify-content-center\">\n    {props.children}\n  </section>\n)\n\nconst IndexPage = () => {\n  const { markdownRemark: about } = useStaticQuery(graphql`\n      query AboutQuery {\n        markdownRemark(frontmatter: {templateKey: {eq: \"about\"}}) {\n          frontmatter {\n            title\n            github\n            linkedin\n            name\n            templateKey\n            surname\n            skills {\n              name\n              skills {\n                name\n                skills\n              }\n            }\n          }\n          html\n        }\n      }\n    `)\n\n  const fullName = [about.frontmatter.name, about.frontmatter.surname].join(' ')\n  return (\n    <Layout>\n      <SEO title={fullName} />\n      <Section id=\"about\">\n        <header>\n          <h1>\n            {about.frontmatter.name} <span className=\"text-primary\">{about.frontmatter.surname}</span>\n          </h1>\n          <div className=\"subheading\">\n            {about.frontmatter.title}\n          </div>\n        </header>\n        <div className=\"my-4 lead\" dangerouslySetInnerHTML={{ __html: about.html }} />\n\n        <section title=\"Skills\" id=\"skills\">\n          <header>\n            <h2>Skills</h2>\n          </header>\n          <Row>\n          {about.frontmatter.skills && about.frontmatter.skills.map((skill, i) => (\n            <Col xs={12} sm={6} md={3} key={i} className=\"mb-4\">\n              <h3>{skill.name}</h3>\n              {skill.skills && skill.skills.map((subskill, j) => (\n                <div key={j}>\n                  <Badge variant=\"secondary\" className=\"mr-2\">{subskill.name}</Badge>\n                  {subskill.skills && subskill.skills.map((subsubskill, k) => (\n                    <Badge variant=\"primary\" className=\"mx-2\" key={k}>{subsubskill}</Badge>\n                  ))}\n                </div>\n              ))}\n            </Col>\n          ))}\n          </Row>\n        </section>\n\n        <Nav className=\"social-icons\">\n          <Nav.Link href={about.frontmatter.linkedin} target=\"_blank\" className=\"pl-0\">\n            <FaLinkedin size=\"64\" />\n          </Nav.Link>\n          <Nav.Link href={about.frontmatter.github} target=\"_blank\">\n            <FaGithub size=\"64\" />\n          </Nav.Link>\n        </Nav>\n      </Section>\n      <hr className=\"d-print-none\" />\n      <Section title=\"Education\" id=\"education\">\n        <header>\n          <h2>Education</h2>\n        </header>\n        <Education />\n      </Section>\n      <hr className=\"d-print-none\" />\n      <Section id=\"portfolio\">\n        <header>\n          <h2>Portfolio</h2>\n        </header>\n        <Portfolio />\n      </Section>\n      <hr className=\"d-print-none\" />\n      <Section title=\"Interests\" id=\"interests\">\n        <header>\n          <h2>Interests</h2>\n        </header>\n        <Interests />\n      </Section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link, useStaticQuery, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\nimport { Navbar, Nav } from \"react-bootstrap\"\nimport Img from \"gatsby-image\"\n\nconst Header = ({ siteTitle }) => {\n  const [expanded, setExpanded] = useState(false);\n  const _handleLinkClick = (e, target) => {\n    if (typeof window !== undefined) {\n      e.preventDefault()\n      const element = document.getElementById(target)\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n  }\n  const avatar = useStaticQuery(\n    graphql`\n      query {\n        file(relativePath: { eq: \"avatar.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed(width: 200, height: 200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `\n  )\n  const sections = ['about', 'education', 'portfolio', 'interests']\n  return (\n    <Navbar expanded={expanded} onToggle={() => setExpanded(!expanded)} bg=\"primary\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand href=\"#home\">\n        <span className=\"d-block d-lg-none\">\n          {siteTitle}\n        </span>\n        <span className=\"d-none d-lg-block\">\n          <Img fixed={avatar.file.childImageSharp.fixed} className=\"img-fluid img-profile rounded-circle border-1 mx-auto mb-2\" alt=\"portret\" />\n        </span>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\" onClick={() => setExpanded(false)}>\n          {sections.map(section =>\n            <Link\n              onClick={e => _handleLinkClick(e, section)}\n              to={'/#' + section}\n              className=\"nav-link\"\n              key={section}\n            >\n              {section}\n            </Link>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./navbar\"\nimport '../style/theme.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main className=\"container-fluid p-0\">\n        {children}\n      </main>\n      <footer className=\"p-3 p-lg-5\">\n        Last updated: {new Date().getFullYear()}\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}