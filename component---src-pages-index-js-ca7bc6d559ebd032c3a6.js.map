{"version":3,"sources":["webpack:///./src/components/education/study.js","webpack:///./src/components/education/list.js","webpack:///./src/components/tool.js","webpack:///./src/components/portfolio/project.js","webpack:///./src/components/portfolio/list.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/avatar.png","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/navbar.js","webpack:///./src/components/layout.js"],"names":["education_study","_ref","study","react_default","a","createElement","className","frontmatter","title","degree","school","dangerouslySetInnerHTML","__html","html","date","list","studies","_1078979208","data","allMarkdownRemark","edges","Fragment","length","map","post","node","key","id","tool","props","icon","react","reactIcon","angular","angularIcon","bootstrap","bootstrapIcon","django","djangoIcon","gulp","gulpIcon","wordpress","wordpressIcon","gatsby","gatsbyIcon","webpack","webpackIcon","jquery","jQueryIcon","aws","awsIcon","sass","sassIcon","dist_icon","Object","assign","portfolio_project","project","toolset","Card","border","image","href","link","rel","target","gatsby_image_default","fluid","childImageSharp","Body","Title","as","Text","keys","index","size","width","portfolio_list","portfolio","_374809803","CardColumns","Section","children","IndexPage","layout","seo","pages_Section","Nav","Link","index_esm","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","json","__webpack_require__","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","loader","enqueue","createContext","Header","siteTitle","_useState","useState","expanded","setExpanded","Navbar","onToggle","bg","variant","expand","fixed","Brand","src","avatar","alt","Toggle","aria-controls","Collapse","onClick","section","gatsby_link_default","e","undefined","window","preventDefault","document","getElementById","scrollIntoView","behavior","block","_handleLinkClick","to","Layout","_856328897","navbar","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-ca7bc6d559ebd032c3a6.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nexport default ({ study }) => {\n  return (\n    <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n      <div className=\"resume-content\">\n        <h3 className=\"mb-0\">\n          {study.frontmatter.title} <small className=\"text-muted\">{study.frontmatter.degree}</small>\n        </h3>\n        <div className=\"subheading mb-3\">\n          {study.frontmatter.school}\n        </div>\n        <div\n          dangerouslySetInnerHTML={{ __html: study.html }}\n        />\n      </div>\n      <div className=\"resume-date text-md-right\">\n        <span className=\"text-primary\">{study.frontmatter.date}</span>\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  fragment StudyFragment on MarkdownRemark {\n    excerpt(pruneLength: 400)\n    html\n    id\n    frontmatter {\n      title\n      degree\n      school\n      started(formatString: \"MMMM YYYY\")\n      ended(formatString: \"MMMM YYYY\")\n    }\n  }\n`","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Study from './study';\n\nexport default () => {\n    const data = useStaticQuery(graphql`\n    query EducationQuery {\n        allMarkdownRemark(\n            sort: { order: ASC, fields: [frontmatter___ended] }\n            filter: { frontmatter: { templateKey: { eq: \"study\" } } }\n        ) {\n            edges {\n                node {\n                    ...StudyFragment\n                }\n            }\n        }\n    }\n  `)\n    const studies = data.allMarkdownRemark.edges\n    return (\n        <React.Fragment>\n            {studies && studies.length &&\n                studies.map(({ node: post }) => (\n                    <Study study={post} key={post.id}></Study>\n                ))\n            }\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { Icon } from '@iconify/react';\nimport reactIcon from '@iconify/icons-simple-icons/react';\nimport angularIcon from '@iconify/icons-simple-icons/angular';\nimport sassIcon from '@iconify/icons-simple-icons/sass';\nimport bootstrapIcon from '@iconify/icons-simple-icons/bootstrap';\nimport djangoIcon from '@iconify/icons-simple-icons/django';\nimport wordpressIcon from '@iconify/icons-simple-icons/wordpress';\nimport gulpIcon from '@iconify/icons-simple-icons/gulp';\nimport webpackIcon from '@iconify/icons-simple-icons/webpack';\nimport gatsbyIcon from '@iconify/icons-simple-icons/gatsby';\nimport jQueryIcon from '@iconify/icons-simple-icons/jquery';\nimport awsIcon from '@iconify/icons-simple-icons/amazonaws';\n\nexport default (props) => {\n    const icons = {\n        react: reactIcon,\n        angular: angularIcon,\n        bootstrap: bootstrapIcon,\n        django: djangoIcon,\n        gulp: gulpIcon,\n        wordpress: wordpressIcon,\n        gatsby: gatsbyIcon,\n        webpack: webpackIcon,\n        jquery: jQueryIcon,\n        aws: awsIcon,\n        sass: sassIcon\n    }\n    const icon = icons[props.tool]\n    return (\n        <>\n            <Icon icon={icon} {...props} className=\"tool-icon\" />\n        </>\n    )\n}","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Card } from 'react-bootstrap'\nimport Img from \"gatsby-image\"\nimport Tool from \"../tool\"\n\nexport default ({ project }) => {\n  const toolset = project.frontmatter.toolset\n  return (\n    <Card border=\"secondary\" className=\"shadow\">\n      {project.frontmatter.image &&\n        <a href={project.frontmatter.link} rel=\"noopener noreferrer\" target=\"_blank\">\n          <Img className=\"card-img-top\" fluid={project.frontmatter.image.childImageSharp.fluid} />\n        </a>\n      }\n      <Card.Body>\n        <Card.Title as=\"h3\">{project.frontmatter.title}</Card.Title>\n        <Card.Text dangerouslySetInnerHTML={{ __html: project.html }} />\n        <ul className=\"list-inline\">\n          {toolset && Object.keys(toolset).map((key, index) => (\n            toolset[key] &&\n            <li className=\"list-inline-item\" key={index}>\n              <Tool tool={key} size=\"32\" width=\"2em\" />\n            </li>\n          ))}\n        </ul>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport const query = graphql`\n  fragment ProjectFragment on MarkdownRemark {\n    excerpt(pruneLength: 400)\n    html\n    id\n    frontmatter {\n      title\n      customer\n      link\n      toolset {\n        react\n        angular\n        bootstrap\n        django\n        gulp\n        wordpress\n        gatsby\n        webpack\n        jquery\n        aws\n        sass\n      }\n      started(formatString: \"MMMM YYYY\")\n      ended(formatString: \"MMMM YYYY\")\n      image {\n        childImageSharp {\n          fluid(maxWidth: 1024, maxHeight: 576, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Project from './project';\nimport { CardColumns } from 'react-bootstrap';\n\nexport default () => {\n    const data = useStaticQuery(graphql`\n    query PortfolioQuery {\n        allMarkdownRemark(\n            sort: { order: ASC, fields: [frontmatter___ended] }\n            filter: { frontmatter: { templateKey: { eq: \"project\" } } }\n        ) {\n            edges {\n                node {\n                    ...ProjectFragment\n                }\n            }\n        }\n    }\n  `)\n    const portfolio = data.allMarkdownRemark.edges\n    return (\n        <CardColumns>\n            {portfolio && portfolio.length &&\n                portfolio.map(({ node: post }) => (\n                    <Project project={post} key={post.id}></Project>\n                ))\n            }\n        </CardColumns>\n    )\n}","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Education from \"../components/education/list\"\nimport Portfolio from \"../components/portfolio/list\"\nimport { FaLinkedin, FaGithub } from 'react-icons/fa';\nimport { Nav } from \"react-bootstrap\";\n\nconst Section = (props) => (\n  <section id={props.id} className=\"resume-section p-3 p-lg-5 d-flex flex-column justify-content-center\">\n    {props.children}\n  </section>\n)\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Vincent van Bergen\" />\n    <Section id=\"about\">\n      <header>\n        <h1>\n          Vincent <span className=\"text-primary\">van Bergen</span>\n        </h1>\n        <div className=\"subheading\">\n          Johannesburgstraat 9 · 5642EK, Eindhoven · +31 681 506 563  · <a href=\"mailto:v.vanbergen@gmail.com\">v.vanbergen@gmail.com</a>\n        </div>\n      </header>\n      <div className=\"my-4\">\n        <p className=\"lead\">\n          I am an experienced full-stack in webdeveloper. Since I started my studying computer science I have been active as a freelancer.\n          I have mostly provided my clients with complete solutions, ranging from backend CRM systems to frontend applications and hosting.\n      </p>\n        <p className=\"lead\">\n          Nowadays my focus is on frontend development combined with cloud applications.\n      </p>\n      </div>\n\n      <Nav className=\"social-icons\">\n        <Nav.Link href=\"https://www.linkedin.com/in/vincent-van-bergen/\" target=\"_blank\" className=\"pl-0\">\n          <FaLinkedin size=\"64\" />\n        </Nav.Link>\n        <Nav.Link href=\"https://github.com/corallus\">\n          <FaGithub size=\"64\" />\n        </Nav.Link>\n      </Nav>\n    </Section>\n    <hr className=\"d-print-none\" />\n    <Section title=\"Education\" id=\"education\">\n      <header>\n        <h2>Education</h2>\n      </header>\n      <p className=\"lead mb-5\">\n        After my bachelor in computer science I started doing a master at EIT Digital, an organization for European entrepreneurs driving digital innovation in ICT & Entrepeneurship. My first years' specialization is in Service Design and Engineering, which I have completed at Aalto University in Finland. My second years' specialization is Service Oriented Business Process Management at Eindhoven University of Technology. After passing all courses I dropped out during my masters' thesis to work as a self-employed web developer.\n      </p>\n      <Education />\n    </Section>\n    <hr className=\"d-print-none\" />\n    <Section id=\"portfolio\">\n      <header>\n        <h2>Portfolio</h2>\n      </header>\n      <Portfolio />\n    </Section>\n    <hr className=\"d-print-none\" />\n    <Section title=\"Skills\" id=\"skills\">\n      <header>\n        <h2>Skills</h2>\n      </header>\n    </Section>\n    <hr className=\"d-print-none\" />\n    <Section title=\"Interests\" id=\"interests\">\n      <header>\n        <h2>Interests</h2>\n      </header>\n    </Section>\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/avatar-e5f6f8fda1a01f4101c69f82e5831ec9.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport avatar from \"../images/avatar.png\"\n\nconst Header = ({ siteTitle }) => {\n  const [expanded, setExpanded] = useState(false);\n  const _handleLinkClick = (e, target) => {\n    if (typeof window !== undefined) {\n      e.preventDefault()\n      const element = document.getElementById(target)\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }\n  }\n  const sections = ['about', 'education', 'portfolio', 'skills', 'interests']\n  return (\n    <Navbar expanded={expanded} onToggle={() => setExpanded(!expanded)} bg=\"primary\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand href=\"#home\">\n        <span className=\"d-block d-lg-none\">\n          {siteTitle}\n        </span>\n        <span className=\"d-none d-lg-block\">\n          <img src={avatar} className=\"img-fluid img-profile rounded-circle border-1 mx-auto mb-2\" alt=\"portret\" />\n        </span>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\" onClick={() => setExpanded(false)}>\n          {sections.map(section =>\n            <Link\n              onClick={e => _handleLinkClick(e, section)}\n              to={'/#' + section}\n              className=\"nav-link\"\n              key={section}\n            >\n              {section}\n            </Link>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./navbar\"\nimport '../style/theme.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main className=\"container-fluid p-0\">\n        {children}\n      </main>\n      <footer className=\"p-3 p-lg-5\">\n        Last updated: {new Date().getFullYear()}\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}